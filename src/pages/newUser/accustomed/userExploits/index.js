import React, { Component } from 'react'
import Taro from '@tarojs/taro'
import { View,Text, Swiper,Image, SwiperItem} from '@tarojs/components'
import Utils from '../../../../utils/utils'
import Nav from '../../../../layout/layoutNav'
import {wxapiGet ,wxapiPost} from "../../../../api/api";
import Ajax from "../../../../api/request";
import classNames from  'classnames'
import './index.scss'
class userExploits extends Component{
  defaultProps = {}
  config = {
    navigationBarTitleText: '我的战绩' ,
  }
  constructor () {
    super(...arguments)
    this.state = {
      title: '我的战绩',
      matchAllEarn: '--',
      matchMaxEarn: '--',
      matchBestResult: '--',
      matchSignAmount: '--',
      userMatchList: [],
      userMatch: {
        page: '1',
        limit: '10',
        identify: 'habit',
        subIdentify: 'wakeUp'
      }
    }
  }
  componentDidShow() {
    this.getSimpleRecord({
      identify: 'habit',
      subIdentify: 'wakeUp'
    })
    this.MatchRecordInfo(this.state.userMatch)
  }
  onReachBottom(){
    this.setState({
      userMatch:{
        ...this.state.userMatch,
        limit:this.state.userMatch.limit+=10
      },
    },res =>{
      this.MatchRecordInfo(this.state.userMatch)
    })
  }//上拉加载
  getSimpleRecord(data) {
    Ajax({
      data:data,
      url: wxapiGet.wechatGetSimpleRecord
    },'get').then(
      res=>{
        const {errMsg} = res
        if(errMsg === 'request:ok'){
          const {success,resultDesc} = res.data
          if(success){
            let { content:{matchAllEarn,matchMaxEarn,matchBestResult,matchSignAmount} } =res.data

            this.setState({
              matchAllEarn,matchMaxEarn,matchBestResult,matchSignAmount
            })
          }
          else {
            Utils.Toast(resultDesc)
          }
        }
      }
    )
  }
  MatchRecordInfo(data) {
    Ajax({
      data:data,
      url: wxapiGet.wechatGetMatchRecordInfo
    },'get').then(
      res=>{
        const {errMsg} = res
        if(errMsg === 'request:ok'){
          const {success,resultDesc} = res.data
          if(success){
            let { content:{userMatchList} } =res.data
            this.setState({
              userMatchList
            })
          }
          else {
            Utils.Toast(resultDesc)
          }
        }
      }
    )
  }
  setStatus (code) {
    let obj = {};
    switch (code) {
      case '0' : obj={detailsClass:'exploits_statusIcon exploits_statusColor1',val: '未开始'} ;break
      case '3' : obj={detailsClass:'exploits_statusIcon exploits_statusColor4',val: '已领奖'} ;break
      case '4' : obj={detailsClass:'exploits_statusIcon exploits_statusColor2',val: '进行中'} ;break
      case '5' : obj={detailsClass:'exploits_statusIcon exploits_statusColor3',val: '已错过'} ;break
      default : obj= {detailsClass:'exploits_statusIcon exploits_statusColor3',val: '未知状态'} ;break
    }
    return obj
  }
  render() {
    const { title,matchAllEarn,matchMaxEarn,matchBestResult,matchSignAmount ,userMatchList} = this.state
    return(
      <View className='exploits_box'>
        <Nav title={title}></Nav>
        {/*导航栏*/}
        <View className='exploits_details'>
          <View className='exploits_earnings'>
            <View className='exploits_earnings_bean'>
              {matchAllEarn}
            </View>
            <View className='exploits_earnings_beanTitle'>
              总收益（卡豆）
            </View>
            <View className='exploits_earning_beanDetails cleanfix'>
              <View className='exploits_earning_describe'>
                <View className='exploits_earning_describe1'>{matchSignAmount}</View>
                <View className='exploits_earning_describe2'>参赛次数</View>
              </View>
              <View className='exploits_earning_describe'>
                <View className='exploits_earning_describe1'>{matchMaxEarn}</View>
                <View className='exploits_earning_describe2'>最高收益（卡豆）</View>
              </View>
              <View className='exploits_earning_describe'>
                <View className='exploits_earning_describe1'>{matchBestResult?matchBestResult:'--'}</View>
                <View className='exploits_earning_describe2'>最早打卡(时间)</View>
              </View>
            </View>
          </View>
        </View>
        {/*战绩简单信息*/}
        {userMatchList.map(item =>{
          const obj = this.setStatus(item.recordStatus)
          return(
            <View key={item.matchId} className='exploits_record'>
              <View className='exploits_date'>
                {item.recordDate}
              </View>
              <View className='exploits_date_beanDetails cleanfix'>
                <View className='exploits_date_describe'>
                  <View className='exploits_date_describe1'>{item.totalBeanAmount}</View>
                  <View className='exploits_date_describe2'>总奖池（卡豆）</View>
                </View>
                <View className='exploits_date_describe'>
                  <View className='exploits_date_describe1'>{item.targetUserAmount}</View>
                  <View className='exploits_date_describe2'>达标人数（人）</View>
                </View>
                <View className='exploits_date_describe'>
                  <View className='exploits_date_describe1'>{item.earnBeanAmount}</View>
                  <View className='exploits_date_describe2'>收益（卡豆）</View>
                </View>
              </View>
              <View className={obj.detailsClass}>{obj.val}</View>
            </View>
          )
        })}
        {/*战绩详情*/}
      </View>
    )
  }
}
export default userExploits
